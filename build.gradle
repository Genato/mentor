buildscript {
	repositories {
		maven {
			url "https://plugins.gradle.org/m2/"
		}
	}
	dependencies {
		classpath "gradle.plugin.fr.putnami.gwt:putnami-gradle-plugin:0.4.0"
	}
}

plugins {
	id 'java'
	id 'application'
	id 'eclipse'
	id 'org.flywaydb.flyway' version '4.0.3'
	id "fr.putnami.gwt" version "0.4.0"
}

sourceCompatibility = JavaVersion.VERSION_1_8
version = '0.0.0-pre'
mainClassName = 'hr.vsite.mentor.MentorCmd'

repositories {
    jcenter()
	mavenCentral()
}

configurations {
	provided
}

dependencies {

	compile	'ch.qos.logback:logback-core:1.1.7',
			'ch.qos.logback:logback-classic:1.1.7',
			'org.slf4j:slf4j-api:1.7.21',
			'org.apache.commons:commons-lang3:3.5',
			'org.apache.commons:commons-dbcp2:2.1.1',
			'commons-configuration:commons-configuration:1.10',
			'commons-collections:commons-collections:3.2.2',	// optional, but needed, for XML support in commons-configuration
			'commons-daemon:commons-daemon:1.0.15',
			'com.google.inject:guice:4.1.0',
			'com.google.inject.extensions:guice-servlet:4.1.0',
			'com.google.guava:guava:20.0',
			'org.quartz-scheduler:quartz:2.2.3',
			'org.eclipse.jetty.aggregate:jetty-all:9.3.13.v20161014',
			'org.jboss.resteasy:resteasy-jaxrs-all:3.0.19.Final',
			'org.jboss.resteasy:resteasy-servlet-initializer:3.0.19.Final',
			'org.jboss.resteasy:resteasy-guice:3.0.19.Final',
			'org.jboss.resteasy:resteasy-jackson2-provider:3.0.19.Final',
			'com.fasterxml.jackson.core:jackson-core:2.8.4',
			'com.fasterxml.jackson.core:jackson-databind:2.8.4',
			'com.fasterxml.jackson.core:jackson-annotations:2.8.4',
			'javax.transaction:javax.transaction-api:1.2',

			// should be in compileOnly group, but it has issues with Putnami (https://github.com/Putnami/putnami-gradle-plugin/issues/37)
			'org.fusesource.restygwt:restygwt:2.2.0',
			'com.github.nmorel.gwtjackson:gwt-jackson:0.14.1',	// for RestyGWT, but it depends on too old version
			'com.github.gwtmaterialdesign:gwt-material:2.0-rc3',
			'com.github.gwtmaterialdesign:gwt-material-addins:2.0-rc3',
			'com.github.gwtmaterialdesign:gwt-material-themes:2.0-rc3',
			'com.github.gwtmaterialdesign:gwt-material-jquery:1.0-rc3',
			'com.github.gwtmaterialdesign:gwt-material-table:1.0-rc3',
			'com.google.api-client:google-api-client:1.22.0',
			'com.google.apis:google-api-services-youtube:v3-rev180-1.22.0'

	runtime	'org.postgresql:postgresql:9.4.1211.jre7'

	provided	'javax.servlet:javax.servlet-api:3.1.0'
	
//	compileOnly	'org.fusesource.restygwt:restygwt:2.2.0',

}

distributions {
	main {
		contents {
			
			exclude('conf/jdbc.properties')
			rename('jdbc.template.properties', 'jdbc.properties')
			
			exclude('conf/jetty.xml')
			rename('jetty.template.xml', 'jetty.xml')
			
			exclude('conf/logback.xml')
			rename('logback.template.xml', 'logback.xml')
			
			exclude('conf/mentor.xml')
			rename('mentor.template.xml', 'mentor.xml')
			
		}
	}
}

processResources {
	filesMatching("**/*.properties") {
		expand version: version
	}
}

putnami {
	module 'hr.vsite.mentor.web.Mentor'
	googlePluginEclipse = true
	gwtVersion = '2.8.0'
	compile {
		sourceLevel = JavaVersion.VERSION_1_8
		logLevel = 'INFO'
		style = 'OBF'
		optimize = 9
		//incremental = true
		//localWorkers = Runtime.getRuntime().availableProcessors() // Putnami ignores this and calculates on the fly from localWorkersMem and currently available memory
		localWorkersMem = 2048	// MB
		maxHeapSize = '512M'
		war = 'build/war/main'
		deploy = 'build/war/main/WEB-INF/deploy'
	}
	dev {
		bindAddress = "0.0.0.0"
		failOnError = false
		precompile = false
		incremental = true
		//port = 9876
		sourceLevel = JavaVersion.VERSION_1_8
		logLevel = "INFO"	/* (ERROR, WARN, INFO, TRACE, DEBUG, SPAM, ALL) */
		generateJsInteropExports = true
		methodNameDisplayMode = "NONE"	/* Emit extra information allow chrome dev tools to display Java identifiers in many places instead of JavaScript functions. (NONE, ONLY_METHOD_NAME, ABBREVIATED, FULL) */
		strict = false
		noServer = true
		war = 'build/war/main'
		//extraArgs = ["-Dgwt.persistentunitcachedir=build/sdm"]
		/** Java args */
		maxHeapSize = "1024m"
		minHeapSize = "512m"
		//debugJava = true
		//debugPort = 8000
		//debugSuspend = false
		//javaArgs = ["-Xmx1024m", "-Xms256m"]
    }	
}

run {
	classpath += files("${System.env.MENTOR_CONF}", files("${System.properties.MENTOR_CONF}"), "build/conf/main")
	standardInput = System.in
}

startScripts {
	doLast {
		unixScript.text = unixScript.text.replace('CLASSPATH=', 'CLASSPATH=$MENTOR_CONF:$APP_HOME/conf:') 
		windowsScript.text = windowsScript.text.replace('set CLASSPATH=', 'set CLASSPATH=%MENTOR_CONF%;%APP_HOME%\\conf;')
	}
}

task wrapper(type: Wrapper) {
    gradleVersion = '3.2.1'
}

task processConf(type: Copy) {
    from('src/main/dist/conf') {
        include 'jdbc.properties'
        include 'jetty.xml'
        include 'logback.xml'
        include 'mentor.xml'
    }
    into 'build/conf/main'
}

task processWar(type: Copy) {
    from('src/main/dist/war') {
        include '**/*'
    }
    into 'build/war/main'
}

classes {
    classes.dependsOn processConf, processWar
}

build.dependsOn flywayMigrate

